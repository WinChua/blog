digraph compound_stmt {
 graph[label="compound_stmt:if_stmt | while_stmt | for_stmt | try_stmt | with_stmt | funcdef | classdef | decorated | async_stmt"]
 subgraph compound_stmt_nfa {
  nfa_0->nfa_1[label="epsilon"]
  nfa_1->nfa_2[label="if_stmt"]
  nfa_2->nfa_3[label="epsilon"]
  nfa_0->nfa_4[label="epsilon"]
  nfa_4->nfa_5[label="while_stmt"]
  nfa_5->nfa_3[label="epsilon"]
  nfa_0->nfa_6[label="epsilon"]
  nfa_6->nfa_7[label="for_stmt"]
  nfa_7->nfa_3[label="epsilon"]
  nfa_0->nfa_8[label="epsilon"]
  nfa_8->nfa_9[label="try_stmt"]
  nfa_9->nfa_3[label="epsilon"]
  nfa_0->nfa_10[label="epsilon"]
  nfa_10->nfa_11[label="with_stmt"]
  nfa_11->nfa_3[label="epsilon"]
  nfa_0->nfa_12[label="epsilon"]
  nfa_12->nfa_13[label="funcdef"]
  nfa_13->nfa_3[label="epsilon"]
  nfa_0->nfa_14[label="epsilon"]
  nfa_14->nfa_15[label="classdef"]
  nfa_15->nfa_3[label="epsilon"]
  nfa_0->nfa_16[label="epsilon"]
  nfa_16->nfa_17[label="decorated"]
  nfa_17->nfa_3[label="epsilon"]
  nfa_0->nfa_18[label="epsilon"]
  nfa_18->nfa_19[label="async_stmt"]
  nfa_19->nfa_3[label="epsilon"]
  }
 subgraph compound_stmt_dfa {
  dfa_0->dfa_1[label="if_stmt",color=red]
  dfa_0->dfa_2[label="try_stmt",color=red]
  dfa_0->dfa_3[label="with_stmt",color=red]
  dfa_0->dfa_4[label="decorated",color=red]
  dfa_0->dfa_5[label="while_stmt",color=red]
  dfa_0->dfa_6[label="funcdef",color=red]
  dfa_0->dfa_7[label="async_stmt",color=red]
  dfa_0->dfa_8[label="for_stmt",color=red]
  dfa_0->dfa_9[label="classdef",color=red]
  dfa_1[shape=doublecircle]
  dfa_2[shape=doublecircle]
  dfa_3[shape=doublecircle]
  dfa_4[shape=doublecircle]
  dfa_5[shape=doublecircle]
  dfa_6[shape=doublecircle]
  dfa_7[shape=doublecircle]
  dfa_8[shape=doublecircle]
  dfa_9[shape=doublecircle]
  }
 subgraph compound_stmt_m_dfa {
  m_dfa_0->m_dfa_1[label="if_stmt",color=red]
  m_dfa_0->m_dfa_1[label="try_stmt",color=red]
  m_dfa_0->m_dfa_1[label="with_stmt",color=red]
  m_dfa_0->m_dfa_1[label="decorated",color=red]
  m_dfa_0->m_dfa_1[label="while_stmt",color=red]
  m_dfa_0->m_dfa_1[label="funcdef",color=red]
  m_dfa_0->m_dfa_1[label="async_stmt",color=red]
  m_dfa_0->m_dfa_1[label="for_stmt",color=red]
  m_dfa_0->m_dfa_1[label="classdef",color=red]
  m_dfa_1[shape=doublecircle]
  }
}
